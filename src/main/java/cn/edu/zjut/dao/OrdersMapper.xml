<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.zjut.dao.OrdersMapper">
    <resultMap id="OrdersResultMap" type="cn.edu.zjut.po.Orders">
        <id property="orderId" column="orderId"/>
        <result property="orderStatus" column="orderStatus"/>
        <result property="orderPaymentMethod" column="orderPaymentMethod"/>
        <result property="shopId" column="shopId"/>
        <result property="consumerId" column="consumerId"/>
        <result property="orderTime" column="orderTime"/>
        <result property="logisticsSingle" column="logisticsSingle"/>
        <result property="goodTotalPrices" column="goodTotalPrices"/>
        <result property="discountAmount" column="discountAmount"/>
        <result property="warehousePhone" column="warehousePhone"/>
        <result property="deliveredPhone" column="deliveredPhone"/>
        <result property="warehouseDetailedAddress" column="warehouseDetailedAddress"/>
        <result property="deliverProvince" column="deliverProvince"/>
        <result property="deliverCity" column="deliverCity"/>
        <result property="deliverArea" column="deliverArea"/>
        <result property="deliveredName" column="deliveredName"/>
        <result property="deliveredDetailedAddress" column="deliveredDetailedAddress"/>
        <result property="warehouseName" column="warehouseName"/>
        <result property="warehouseProvince" column="warehouseProvince"/>
        <result property="warehouseCity" column="warehouseCity"/>
        <result property="warehouseArea" column="warehouseArea"/>
        <result property="orderDate" column="orderDate"/>
        <collection property="orderGoodList" javaType="ArrayList"
                    column="orderId" ofType="cn.edu.zjut.po.OrderGood"
                    select="cn.edu.zjut.dao.OrderGoodMapper.getGoodsById"
                    fetchType="lazy">
            <id property="orderId" column="orderId" />
            <id property="goodId" column="goodId" />
            <result property="num" column="num"/>
        </collection>
    </resultMap>


    <select id="getAllOrders" resultMap="OrdersResultMap">
       select * from orders;
    </select>

    <select id="selectOrdersById" resultMap="OrdersResultMap" parameterType="java.lang.Integer">
        select orders.*
        from orders
        where orderId=#{orderId}
    </select>

    <select id="selectOrders" resultMap="OrdersResultMap" parameterType="cn.edu.zjut.po.Orders">
        select distinct o.*,g.*,og.num from orders o,goods g,ordergood og
        <where>
            <if test="shopId != null"> and o.orderId = og.orderId AND g.goodsId = og.goodId AND o.shopId = #{shopId}</if>
            <if test="orderStatus != null and orderStatus !=''"> and orderStatus=#{orderStatus}</if>
            <if test="orderId != null and orderId !=''"> and o.orderId=#{orderId}</if>
            <if test="orderDate != null "> and orderDate=#{orderDate}</if>
            <if test="consumerId != null and consumerId !=''"> and consumerId=#{consumerId}</if>
        </where>

    </select>

    <insert id="addOrder" useGeneratedKeys="true" keyProperty="orderId" parameterType="cn.edu.zjut.po.Orders">
        insert into wein.orders
        values(
        null,
        #{actuaLAmountPaid},
        #{orderStatus},
        #{orderPaymentMethod},
        #{consumerId},
        #{orderTime},
        #{shopId},
        #{logisticsSingle},
        #{goodTotalPrices},
        #{discountAmount},
        #{warehousePhone},
        #{deliveredPhone},
        #{warehouseDetailedAddress},
        #{deliverProvince},
        #{deliverCity},
        #{deliverArea},
        #{deliveredName},
        #{deliveredDetailedAddress},
        #{warehouseName},
        #{warehouseProvince},
        #{warehouseCity},
        #{warehouseArea},
        #{orderDate}
        );
    </insert>

    <update id="addLogisticsSingleList" parameterType="cn.edu.zjut.po.Orders">
        update WeIn.orders
        set logisticsSingle = #{logisticsSingle},
        orderStatus="待收货",
        orderDate = #{orderDate},
        orderTime = #{orderTime}
        where orderId = #{orderId};
    </update>

    <update id="updateOrder" parameterType="cn.edu.zjut.po.Orders">
        update WeIn.orders set
        orderStatus= #{orderStatus},
        orderDate = #{orderDate},
        orderTime = #{orderTime}
        where orderId = #{orderId};
    </update>
    <select id="getFundFlowByDate" resultMap="OrdersResultMap" parameterType="java.lang.String">
        select distinct orders.orderId,orders.orderDate,orders.actualAmountPaid,orders.orderStatus from orders,orderstatus
        where orders.orderId=orderstatus.orderId and orderStatus=orderStatusName
        and( (orderStatus='已完成' and  orderStatusDate like concat('%', #{date}, '%'))
        or (orderStatus='仅退款' and  orderStatusDate like concat('%', #{date}, '%'))
        or (orderStatus='退货退款' and  orderStatusDate like concat('%', #{date}, '%')))

    </select>

    <select id="getAllFundFlow" resultMap="OrdersResultMap">
        select distinct orders.* from orders,orderstatus
        where orders.orderId=orderstatus.orderId and orderStatus=orderStatusName
        and orderStatus='已完成' or orderStatus='仅退款' or orderStatus='退货退款'
    </select>
</mapper>
